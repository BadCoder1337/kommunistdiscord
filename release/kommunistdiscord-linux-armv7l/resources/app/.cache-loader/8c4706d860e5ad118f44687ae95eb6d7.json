{"remainingRequest":"D:\\Dropbox\\kommunistdiscord\\node_modules\\babel-loader\\lib\\index.js!D:\\Dropbox\\kommunistdiscord\\src\\components\\Login.js","dependencies":[{"path":"D:\\Dropbox\\kommunistdiscord\\src\\components\\Login.js","mtime":1529227018800},{"path":"D:\\Dropbox\\kommunistdiscord\\.babelrc","mtime":1529227671952},{"path":"D:\\Dropbox\\kommunistdiscord\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529227300312},{"path":"D:\\Dropbox\\kommunistdiscord\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n//import strings from './Localization';\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = require('react-bootstrap');\n\nrequire('../assets/stylesheets/base.css');\n\nrequire('../assets/stylesheets/login.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nclass Login extends _react2.default.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: localStorage[\"email\"] || \"\",\n            password: \"\",\n            mfa: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        window.that = this;\n    }\n\n    validateForm() {\n        return this.state.email.length > 0 && this.state.password.length > 0;\n    }\n\n    handleChange(event) {\n        //event.target.id == \"email\" ? localStorage[\"email\"] = event.target.value :\n        this.setState(_extends({}, this.state, {\n            [event.target.id]: event.target.value\n        }));\n    }\n\n    handleSubmit(event) {\n        var _this = this;\n\n        return _asyncToGenerator(function* () {\n            event.preventDefault();\n            let login = yield (yield fetch(\"https://discordapp.com/api/v6/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: _this.state.email,\n                    password: _this.state.password\n                })\n            })).json();\n            if (login.token) {\n                localStorage[\"token\"] = login.token;\n                _this.props.logged();\n            } else {\n                let mfa = yield (yield fetch(\"https://discordapp.com/api/v6/auth/mfa/totp\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        code: _this.state.mfa,\n                        ticket: login.ticket\n                    })\n                })).json();\n                localStorage[\"token\"] = mfa.token;\n                localStorage[\"email\"] = _this.state.email;\n                _this.props.logged();\n            }\n        })();\n    }\n\n    render() {\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                'form',\n                { onSubmit: this.handleSubmit },\n                _react2.default.createElement(\n                    _reactBootstrap.FormGroup,\n                    { controlId: 'email', bsSize: 'large' },\n                    _react2.default.createElement(\n                        _reactBootstrap.ControlLabel,\n                        null,\n                        'Email'\n                    ),\n                    _react2.default.createElement(_reactBootstrap.FormControl, {\n                        autoFocus: true,\n                        type: 'email',\n                        placeholder: 'carlmarx@ussr.su',\n                        value: this.state.email,\n                        onChange: this.handleChange\n                    })\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.FormGroup,\n                    { controlId: 'password', bsSize: 'large' },\n                    _react2.default.createElement(\n                        _reactBootstrap.ControlLabel,\n                        null,\n                        'Password'\n                    ),\n                    _react2.default.createElement(_reactBootstrap.FormControl, {\n                        type: 'password',\n                        placeholder: 'leninstestament',\n                        value: this.state.password,\n                        onChange: this.handleChange\n                    })\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.FormGroup,\n                    { controlId: 'mfa', bsSize: 'small' },\n                    _react2.default.createElement(\n                        _reactBootstrap.ControlLabel,\n                        null,\n                        'MFA Code'\n                    ),\n                    _react2.default.createElement(_reactBootstrap.FormControl, {\n                        type: 'number',\n                        placeholder: '011924',\n                        value: this.state.mfa,\n                        onChange: this.handleChange\n                    })\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Button,\n                    {\n                        block: true,\n                        bsSize: 'large',\n                        disabled: !this.validateForm(),\n                        type: 'submit'\n                    },\n                    this.props.alert\n                )\n            )\n        );\n    }\n}\n\nexports.default = Login;",null]}